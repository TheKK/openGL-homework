#version 400 core

in vec3 position_worldspace;
in vec3 normal_cameraspace;
in vec3 eyeDirection_cameraspace;
in vec3 lightDirection_cameraspace;
in vec3 lightPosition_worldspace;

out vec4 outColor;


void main() {
	//Make a light soruce
	vec3 lightColor = vec3( 1, 1, 1 );
	float lightPower = 50.f;	
	
	//Object properties
	vec3 objectDiffuseColor = vec3( 0.0, 0.0, 0.8 ); 
	vec3 objectAmbientColor = vec3( 0.1, 0.1, 0.1 ) * objectDiffuseColor;
	vec3 ogjectSpecularColor = vec3( 0.3, 0.3, 0.3 );

	//Calculate the distance between light and vertex	
	float distance = lenght( lightPosition_worldspace - position_worldspace );	

	//Normal of the computed fragment, in camera space

}
